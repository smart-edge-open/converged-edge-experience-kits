# SPDX-License-Identifier: Apache-2.0
# Copyright (c) 2019-2020 Intel Corporation

---
- name: check if NFD release already exists
  command: helm status nfd-release -n openness
  ignore_errors: yes
  register: get_release_nfd
  changed_when: false

- name: install NFD chart
  block:
    - name: pull NFD image
      docker_image:
        name: "{{ _nfd_image_name }}"
        tag: "{{ _nfd_tag }}"
        source: pull
      when: not offline_enable
      register: result
      retries: "{{ number_of_retries }}"
      until: result is succeeded
      delay: "{{ retry_delay }}"

    - name: tag NFD image and push to Harbor registry
      docker_image:
        name: "{{ _nfd_image_name }}"
        repository: "{{ _registry_ip_address }}:{{ _registry_port }}/intel/node-feature-discovery"
        tag: "{{ _nfd_tag }}"
        push: yes
        source: local

    - name: remove local NFD image
      docker_image:
        state: absent
        name: "{{ _nfd_image_name }}"
        tag: "{{ _nfd_tag }}"
      when: not offline_enable

    - name: create NFD chart template directory
      file:
        name: "{{ item }}"
        state: directory
        mode: '0755'
      with_items:
        - "{{ _nfd_chart_dir }}"
        - "{{ _nfd_chart_dir }}/templates"
      changed_when: true

    - name: reset _nfd_cek_url for offline mode
      set_fact:
        _nfd_cek_url: "https://{{ hostvars[groups['controller_group'][0]]['ansible_host'] }}/nfd"
      when: offline_enable

    - name: download NFD chart
      get_url:
        url: "{{ _nfd_cek_url }}/{{ item }}"
        dest: "{{ _nfd_chart_dir }}"
      register: result
      retries: "{{ number_of_retries }}"
      until: result is succeeded
      delay: "{{ retry_delay }}"
      with_items: "{{ _nfd_chart }}"

    - name: download NFD chart templates
      get_url:
        url: "{{ _nfd_cek_url }}/{{ item }}"
        dest: "{{ _nfd_chart_dir }}/templates"
      register: result
      retries: "{{ number_of_retries }}"
      until: result is succeeded
      delay: "{{ retry_delay }}"
      with_items: "{{ _nfd_chart_templates }}"

    # openness namespace should already exist
    - name: create openness namespace if needed
      block:
        - name: check if openness namespace exists
          command: kubectl get ns openness
          ignore_errors: yes
          register: get_ns_openness
        - name: create openness namespace
          command: kubectl create namespace openness
          when: get_ns_openness.rc == 1

    - name: apply CMK worker patch
      block:
        - name: install patch utility on CentOS
          yum:
            name: patch
            state: present
          become: yes
          when: ansible_distribution == 'CentOS'

        - name: install patch utility on Ubuntu
          apt:
            name: patch
            state: present
            update_cache: yes
          become: yes
          when: ansible_distribution == 'Ubuntu'

        - name: apply CMK worker patch
          patch:
            src: worker.yml.patch
            dest: "{{ _nfd_chart_dir }}/templates/worker.yml"
            strip: 1
            binary: no
            backup: no
        - name: find backup files
          find:
            paths: "{{ _nfd_chart_dir }}/templates"
            patterns: "*.orig"
          register: backup_files
        - name: remove backup files
          file:
            path: "{{ item.path }}"
            state: absent
          with_items: "{{ backup_files.files }}"
          changed_when: true

    - name: deploy NFD with Helm chart
      command: >
        helm install {{ _nfd_release_name }} {{ _nfd_chart_dir }} \
        --set image.repository={{ _registry_ip_address }}:{{ _registry_port }}/intel/node-feature-discovery \
        --set image.tag={{ _nfd_tag }} --set serviceAccount.name=nfd-master --namespace=openness
      changed_when: true
  when: get_release_nfd.rc != 0
