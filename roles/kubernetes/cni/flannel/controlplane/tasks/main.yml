# SPDX-License-Identifier: Apache-2.0
# Copyright (c) 2020 Intel Corporation

---
- name: open flannel firewall rules
  ignore_errors: yes
  firewalld:
    port: 8472/udp
    permanent: yes
    state: enabled
    immediate: yes
  become: yes
  vars:
    ansible_python_interpreter: "{{ '/usr/bin/python3' if ansible_distribution == 'Ubuntu' else '/usr/bin/python2' }}"

- name: patch node's Pod CIDR
  # flannel's CIDR is read from node's PodCIDR
  command: kubectl patch node "{{ node_name }}" -p '{"spec":{"podCIDR":"{{ flannel_cidr | ipsubnet(24, groups['all'].index(inventory_hostname)) }}" } }'
  changed_when: true

- name: create temp dir
  tempfile:
    state: directory
    suffix: -flannel
  register: tmp_dir

- name: download flannel yml
  get_url:
    url: "{{ _flannel_url }}"
    dest: "{{ tmp_dir.path }}/kube-flannel.yml"
  register: result
  retries: "{{ number_of_retries }}"
  until: result is succeeded
  delay: "{{ retry_delay }}"

- name: copy kustomization.yml
  copy:
    src: kustomization.yml
    dest: "{{ tmp_dir.path }}"

- name: create kustomization files from templates
  template:
    src: "{{ item }}.j2"
    dest: "{{ tmp_dir.path }}/{{ item }}"
  with_items:
    - customize_flannel_conf.yml
    - flannel_change_cidr.yml

- name: kustomize flannel
  shell: kubectl kustomize . > kustomized-flannel.yml
  args:
    chdir: "{{ tmp_dir.path }}"
  changed_when: true

- name: apply flannel.yml with changes
  command: kubectl apply -f kustomized-flannel.yml
  args:
    chdir: "{{ tmp_dir.path }}"
  changed_when: true

- name: apply Flannel's NetworkAttachmentDefinition
  block:
    - name: copy NetworkAttachmentDefinition to remote
      template:
        src: flannel_network_definition.yml.j2
        dest: "{{ tmp_dir.path }}/flannel_network_definition.yml"
    - name: apply Flannel's NetworkAttachmentDefinition
      command: kubectl apply -f {{ tmp_dir.path }}/flannel_network_definition.yml
  when:
    - apply_netdef is defined
    - apply_netdef
