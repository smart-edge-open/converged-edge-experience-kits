# SPDX-License-Identifier: Apache-2.0
# Copyright (c) 2019-2020 Intel Corporation

---
- name: creating the kubernetes env file in Ubuntu
  file:
    path: "{{ _kubernetes_env_file }}"
    state: touch
  become: yes
  when: ansible_distribution == 'Ubuntu'

- name: setting KUBELET_EXTRA_ARGS
  lineinfile:
    path: "{{ _kubernetes_env_file }}"
    regexp: "^KUBELET_EXTRA_ARGS="
    line: "KUBELET_EXTRA_ARGS=--config /usr/lib/systemd/system/kubelet.service.d/kubelet_config.yml"
  become: yes
  notify:
    - enable and restart kubelet

- name: creating kubelet config
  blockinfile:
    path: "{{ _kubernetes_config_file }}"
    marker: "# {mark} OpenNESS configuration - General"
    create: yes
    block: |
      apiVersion: kubelet.config.k8s.io/v1beta1
      kind: KubeletConfiguration
      cgroupDriver: "{{ 'cgroupfs' if (cgroupfs_enable is defined and cgroupfs_enable) else 'systemd' }}"
      KubeletCgroups: "{{ '' if (cgroupfs_enable is defined and cgroupfs_enable) else '/systemd/system.slice' }}"
      authentication:
        x509:
          clientCAFile: /etc/kubernetes/pki/ca.crt
      clusterDNS:
        - 10.96.0.10
      clusterDomain: cluster.local
      featureGates:
        {% if (pwek_enable is defined and pwek_enable) %}
        SCTPSupport: True
        {% endif %}
        TopologyManager: {{ False if topology_manager.policy == 'none' else True }}
      podPidsLimit: 2048
  become: yes
  notify:
    - enable and restart kubelet

- name: customize kubelet config - CPU Manager
  blockinfile:
    path: "{{ _kubernetes_config_file }}"
    marker: "# {mark} OpenNESS configuration - CPU Manager"
    block: |
      cpuManagerPolicy: {{ cpu.policy }}
      reservedSystemCPUs: {{ cpu.reserved_cpus }}
    state: "{{ 'present' if cpu.policy == 'static' else 'absent' }}"
  become: yes
  notify:
    - enable and restart kubelet

- name: customize kubelet config - Topology Manager
  blockinfile:
    path: "{{ _kubernetes_config_file }}"
    marker: "# {mark} OpenNESS configuration - Topology Manager"
    block: |
      topologyManagerPolicy: {{ topology_manager.policy }}
    state: "{{ 'absent' if topology_manager.policy == 'none' else 'present' }}"
  become: yes
  notify:
    - enable and restart kubelet

- name: restart kubelet
  meta: flush_handlers
